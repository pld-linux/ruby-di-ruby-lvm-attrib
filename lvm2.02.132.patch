commit 870439f7aaf220df05acbbf7291bdeaede63795b
Author: Jan RÄ™korajski <baggins@pld-linux.org>
Date:   Fri Oct 30 08:32:13 2015 +0100

    Added 2.02.132 attributes

diff --git a/lib/lvm/attributes/2.02.132(2)/lvs.yaml b/lib/lvm/attributes/2.02.132(2)/lvs.yaml
new file mode 100644
index 0000000..51a1ba5
--- /dev/null
+++ b/lib/lvm/attributes/2.02.132(2)/lvs.yaml
@@ -0,0 +1,260 @@
+# These are column to object attribute mappings
+# generated by ./bin/generate_field_data based on
+# lvm2/lib/report/columns.h
+---
+- :method: convert_lv
+  :column: convert_lv
+  :type_hint: String
+  :description: For lvconvert
+- :method: convert_lv_uuid
+  :column: convert_lv_uuid
+  :type_hint: String
+  :description: For lvconvert
+- :method: copy_percent
+  :column: copy_percent
+  :type_hint: String
+  :description: For RAID
+- :method: data_lv
+  :column: data_lv
+  :type_hint: String
+  :description: For thin and cache pools
+- :method: data_lv_uuid
+  :column: data_lv_uuid
+  :type_hint: String
+  :description: For thin and cache pools
+- :method: data_percent
+  :column: data_percent
+  :type_hint: String
+  :description: For snapshot and thin pools and volumes
+- :method: active
+  :column: lv_active
+  :type_hint: String
+  :description: Active state of the LV.
+- :method: active_exclusively
+  :column: lv_active_exclusively
+  :type_hint: String
+  :description: Set if the LV is active exclusively.
+- :method: active_locally
+  :column: lv_active_locally
+  :type_hint: String
+  :description: Set if the LV is active locally.
+- :method: active_remotely
+  :column: lv_active_remotely
+  :type_hint: String
+  :description: Set if the LV is active remotely.
+- :method: allocation_locked
+  :column: lv_allocation_locked
+  :type_hint: String
+  :description: Set if LV is locked against allocation changes.
+- :method: allocation_policy
+  :column: lv_allocation_policy
+  :type_hint: String
+  :description: LV allocation policy.
+- :method: ancestors
+  :column: lv_ancestors
+  :type_hint: String
+  :description: Ancestors of this LV.
+- :method: attr
+  :column: lv_attr
+  :type_hint: String
+  :description: Various attributes - see man page.
+- :method: converting
+  :column: lv_converting
+  :type_hint: String
+  :description: Set if LV is being converted.
+- :method: descendants
+  :column: lv_descendants
+  :type_hint: String
+  :description: Descendants of this LV.
+- :method: dm_path
+  :column: lv_dm_path
+  :type_hint: String
+  :description: Internal device-mapper pathname for LV (in /dev/mapper directory).
+- :method: fixed_minor
+  :column: lv_fixed_minor
+  :type_hint: String
+  :description: Set if LV has fixed minor number assigned.
+- :method: full_name
+  :column: lv_full_name
+  :type_hint: String
+  :description: Full name of LV including its VG
+- :method: host
+  :column: lv_host
+  :type_hint: String
+  :description: Creation host of the LV
+- :method: image_synced
+  :column: lv_image_synced
+  :type_hint: String
+  :description: Set if mirror/RAID image is synchronized.
+- :method: initial_image_sync
+  :column: lv_initial_image_sync
+  :type_hint: String
+  :description: Set if mirror/RAID images underwent initial resynchronization.
+- :method: layout
+  :column: lv_layout
+  :type_hint: String
+  :description: LV layout.
+- :method: lockargs
+  :column: lv_lockargs
+  :type_hint: String
+  :description: Lock args of the LV used by lvmlockd.
+- :method: major
+  :column: lv_major
+  :type_hint: String
+  :description: Persistent major number or -1 if not persistent.
+- :method: merge_failed
+  :column: lv_merge_failed
+  :type_hint: String
+  :description: Set if snapshot merge failed.
+- :method: merging
+  :column: lv_merging
+  :type_hint: String
+  :description: Set if snapshot LV is being merged to origin.
+- :method: metadata_size
+  :column: lv_metadata_size
+  :type_hint: Integer
+  :description: For thin and cache pools
+- :method: minor
+  :column: lv_minor
+  :type_hint: String
+  :description: Persistent minor number or -1 if not persistent.
+- :method: modules
+  :column: lv_modules
+  :type_hint: String
+  :description: Kernel device-mapper modules required for this LV.
+- :method: name
+  :column: lv_name
+  :type_hint: String
+  :description: Name.  LVs created for internal use are enclosed in brackets.
+- :method: parent
+  :column: lv_parent
+  :type_hint: String
+  :description: For LVs that are components of another LV
+- :method: path
+  :column: lv_path
+  :type_hint: String
+  :description: Full pathname for LV. Blank for internal LVs.
+- :method: profile
+  :column: lv_profile
+  :type_hint: String
+  :description: Configuration profile attached to this LV.
+- :method: read_ahead
+  :column: lv_read_ahead
+  :type_hint: String
+  :description: Read ahead setting in current units.
+- :method: role
+  :column: lv_role
+  :type_hint: String
+  :description: LV role.
+- :method: size
+  :column: lv_size
+  :type_hint: Integer
+  :description: Size of LV in current units.
+- :method: skip_activation
+  :column: lv_skip_activation
+  :type_hint: String
+  :description: Set if LV is skipped on activation.
+- :method: snapshot_invalid
+  :column: lv_snapshot_invalid
+  :type_hint: String
+  :description: Set if snapshot LV is invalid.
+- :method: tags
+  :column: lv_tags
+  :type_hint: String
+  :description: Tags
+- :method: time
+  :column: lv_time
+  :type_hint: String
+  :description: Creation time of the LV
+- :method: uuid
+  :column: lv_uuid
+  :type_hint: String
+  :description: Unique identifier.
+- :method: when_full
+  :column: lv_when_full
+  :type_hint: String
+  :description: For thin pools
+- :method: metadata_lv
+  :column: metadata_lv
+  :type_hint: String
+  :description: For thin and cache pools
+- :method: metadata_lv_uuid
+  :column: metadata_lv_uuid
+  :type_hint: String
+  :description: For thin and cache pools
+- :method: metadata_percent
+  :column: metadata_percent
+  :type_hint: String
+  :description: For thin pools
+- :method: mirror_log
+  :column: mirror_log
+  :type_hint: String
+  :description: For mirrors
+- :method: mirror_log_uuid
+  :column: mirror_log_uuid
+  :type_hint: String
+  :description: For mirrors
+- :method: move_pv
+  :column: move_pv
+  :type_hint: String
+  :description: For pvmove
+- :method: move_pv_uuid
+  :column: move_pv_uuid
+  :type_hint: String
+  :description: For pvmove
+- :method: origin
+  :column: origin
+  :type_hint: String
+  :description: For snapshots
+- :method: origin_size
+  :column: origin_size
+  :type_hint: Integer
+  :description: For snapshots
+- :method: origin_uuid
+  :column: origin_uuid
+  :type_hint: String
+  :description: For snapshots
+- :method: pool_lv
+  :column: pool_lv
+  :type_hint: String
+  :description: For thin volumes
+- :method: pool_lv_uuid
+  :column: pool_lv_uuid
+  :type_hint: String
+  :description: For thin volumes
+- :method: raid_max_recovery_rate
+  :column: raid_max_recovery_rate
+  :type_hint: Integer
+  :description: For RAID1
+- :method: raid_min_recovery_rate
+  :column: raid_min_recovery_rate
+  :type_hint: Integer
+  :description: For RAID1
+- :method: raid_mismatch_count
+  :column: raid_mismatch_count
+  :type_hint: Integer
+  :description: For RAID
+- :method: raid_sync_action
+  :column: raid_sync_action
+  :type_hint: String
+  :description: For RAID
+- :method: raid_write_behind
+  :column: raid_write_behind
+  :type_hint: Integer
+  :description: For RAID1
+- :method: seg_count
+  :column: seg_count
+  :type_hint: Integer
+  :description: Number of segments in LV.
+- :method: snap_percent
+  :column: snap_percent
+  :type_hint: String
+  :description: For snapshots
+- :method: sync_percent
+  :column: sync_percent
+  :type_hint: String
+  :description: For RAID
+- :method: vg_uuid
+  :column: vg_uuid
+  :type_hint: String
+  :description: For VolumeGroup to LogicalVolume relationship.
diff --git a/lib/lvm/attributes/2.02.132(2)/lvsseg.yaml b/lib/lvm/attributes/2.02.132(2)/lvsseg.yaml
new file mode 100644
index 0000000..d06cf39
--- /dev/null
+++ b/lib/lvm/attributes/2.02.132(2)/lvsseg.yaml
@@ -0,0 +1,104 @@
+# These are column to object attribute mappings
+# generated by ./bin/generate_field_data based on
+# lvm2/lib/report/columns.h
+---
+- :method: cache_policy
+  :column: cache_policy
+  :type_hint: String
+  :description: The cache policy (cached segments only).
+- :method: cache_settings
+  :column: cache_settings
+  :type_hint: String
+  :description: Cache settings/parameters (cached segments only).
+- :method: cachemode
+  :column: cachemode
+  :type_hint: String
+  :description: For cache pools
+- :method: chunk_size
+  :column: chunk_size
+  :type_hint: Integer
+  :description: For snapshots
+- :method: chunksize
+  :column: chunksize
+  :type_hint: Integer
+  :description: For snapshots
+- :method: devices
+  :column: devices
+  :type_hint: String
+  :description: Underlying devices used with starting extent numbers.
+- :method: discards
+  :column: discards
+  :type_hint: String
+  :description: For thin pools
+- :method: lv_uuid
+  :column: lv_uuid
+  :type_hint: String
+  :description: For LogicalVolume to LogicalVolumeSegment relationship.
+- :method: region_size
+  :column: region_size
+  :type_hint: Integer
+  :description: For mirrors
+- :method: regionsize
+  :column: regionsize
+  :type_hint: Integer
+  :description: For mirrors
+- :method: monitor
+  :column: seg_monitor
+  :type_hint: String
+  :description: Dmeventd monitoring status of the segment.
+- :method: pe_ranges
+  :column: seg_pe_ranges
+  :type_hint: String
+  :description: Ranges of Physical Extents of underlying devices in command line format.
+- :method: size
+  :column: seg_size
+  :type_hint: Integer
+  :description: Size of segment in current units.
+- :method: size_pe
+  :column: seg_size_pe
+  :type_hint: Integer
+  :description: Size of segment in physical extents.
+- :method: start
+  :column: seg_start
+  :type_hint: Integer
+  :description: Offset within the LV to the start of the segment in current units.
+- :method: start_pe
+  :column: seg_start_pe
+  :type_hint: Integer
+  :description: Offset within the LV to the start of the segment in physical extents.
+- :method: tags
+  :column: seg_tags
+  :type_hint: String
+  :description: Tags
+- :method: segtype
+  :column: segtype
+  :type_hint: String
+  :description: Type of LV segment.
+- :method: stripe_size
+  :column: stripe_size
+  :type_hint: Integer
+  :description: For stripes
+- :method: stripes
+  :column: stripes
+  :type_hint: Integer
+  :description: Number of stripes or mirror legs.
+- :method: stripesize
+  :column: stripesize
+  :type_hint: Integer
+  :description: For stripes
+- :method: thin_count
+  :column: thin_count
+  :type_hint: Integer
+  :description: For thin pools
+- :method: thin_id
+  :column: thin_id
+  :type_hint: Integer
+  :description: For thin volume
+- :method: transaction_id
+  :column: transaction_id
+  :type_hint: Integer
+  :description: For thin pools
+- :method: zero
+  :column: zero
+  :type_hint: String
+  :description: For thin pools
diff --git a/lib/lvm/attributes/2.02.132(2)/pvs.yaml b/lib/lvm/attributes/2.02.132(2)/pvs.yaml
new file mode 100644
index 0000000..d26c413
--- /dev/null
+++ b/lib/lvm/attributes/2.02.132(2)/pvs.yaml
@@ -0,0 +1,93 @@
+# These are column to object attribute mappings
+# generated by ./bin/generate_field_data based on
+# lvm2/lib/report/columns.h
+---
+- :method: dev_size
+  :column: dev_size
+  :type_hint: Integer
+  :description: Size of underlying device in current units.
+- :method: pe_start
+  :column: pe_start
+  :type_hint: Integer
+  :description: Offset to the start of data on the underlying device.
+- :method: allocatable
+  :column: pv_allocatable
+  :type_hint: String
+  :description: Set if this device can be used for allocation.
+- :method: attr
+  :column: pv_attr
+  :type_hint: String
+  :description: Various attributes - see man page.
+- :method: ba_size
+  :column: pv_ba_size
+  :type_hint: Integer
+  :description: Size of PV Bootloader Area in current units.
+- :method: ba_start
+  :column: pv_ba_start
+  :type_hint: Integer
+  :description: Offset to the start of PV Bootloader Area on the underlying device
+    in current units.
+- :method: exported
+  :column: pv_exported
+  :type_hint: String
+  :description: Set if this device is exported.
+- :method: fmt
+  :column: pv_fmt
+  :type_hint: String
+  :description: Type of metadata.
+- :method: free
+  :column: pv_free
+  :type_hint: Integer
+  :description: Total amount of unallocated space in current units.
+- :method: mda_count
+  :column: pv_mda_count
+  :type_hint: Integer
+  :description: Number of metadata areas on this device.
+- :method: mda_free
+  :column: pv_mda_free
+  :type_hint: Integer
+  :description: Free metadata area space on this device in current units.
+- :method: mda_size
+  :column: pv_mda_size
+  :type_hint: Integer
+  :description: Size of smallest metadata area on this device in current units.
+- :method: mda_used_count
+  :column: pv_mda_used_count
+  :type_hint: Integer
+  :description: Number of metadata areas in use on this device.
+- :method: missing
+  :column: pv_missing
+  :type_hint: String
+  :description: Set if this device is missing in system.
+- :method: name
+  :column: pv_name
+  :type_hint: String
+  :description: Name.
+- :method: pe_alloc_count
+  :column: pv_pe_alloc_count
+  :type_hint: Integer
+  :description: Total number of allocated Physical Extents.
+- :method: pe_count
+  :column: pv_pe_count
+  :type_hint: Integer
+  :description: Total number of Physical Extents.
+- :method: size
+  :column: pv_size
+  :type_hint: Integer
+  :description: Size of PV in current units.
+- :method: tags
+  :column: pv_tags
+  :type_hint: String
+  :description: Tags
+- :method: used
+  :column: pv_used
+  :type_hint: Integer
+  :description: Total amount of allocated space in current units.
+- :method: uuid
+  :column: pv_uuid
+  :type_hint: String
+  :description: Unique identifier.
+- :method: vg_uuid
+  :column: vg_uuid
+  :type_hint: String
+  :description: For VolumeGroup to PhysicalVolume relationship.
diff --git a/lib/lvm/attributes/2.02.132(2)/pvsseg.yaml b/lib/lvm/attributes/2.02.132(2)/pvsseg.yaml
new file mode 100644
index 0000000..5ae89c6
--- /dev/null
+++ b/lib/lvm/attributes/2.02.132(2)/pvsseg.yaml
@@ -0,0 +1,16 @@
+# These are column to object attribute mappings
+# generated by ./bin/generate_field_data based on
+# lvm2/lib/report/columns.h
+---
+- :method: pv_uuid
+  :column: pv_uuid
+  :type_hint: String
+  :description: For PhysicalVolume to PhysicalVolumeSegment relationship.
+- :method: size
+  :column: pvseg_size
+  :type_hint: Integer
+  :description: Number of extents in segment.
+- :method: start
+  :column: pvseg_start
+  :type_hint: Integer
+  :description: Physical Extent number of start of segment.
diff --git a/lib/lvm/attributes/2.02.132(2)/vgs.yaml b/lib/lvm/attributes/2.02.132(2)/vgs.yaml
new file mode 100644
index 0000000..e032395
--- /dev/null
+++ b/lib/lvm/attributes/2.02.132(2)/vgs.yaml
@@ -0,0 +1,132 @@
+# These are column to object attribute mappings
+# generated by ./bin/generate_field_data based on
+# lvm2/lib/report/columns.h
+---
+- :method: lv_count
+  :column: lv_count
+  :type_hint: Integer
+  :description: Number of LVs.
+- :method: max_lv
+  :column: max_lv
+  :type_hint: Integer
+  :description: Maximum number of LVs allowed in VG or 0 if unlimited.
+- :method: max_pv
+  :column: max_pv
+  :type_hint: Integer
+  :description: Maximum number of PVs allowed in VG or 0 if unlimited.
+- :method: pv_count
+  :column: pv_count
+  :type_hint: Integer
+  :description: Number of PVs.
+- :method: snap_count
+  :column: snap_count
+  :type_hint: Integer
+  :description: Number of snapshots.
+- :method: allocation_policy
+  :column: vg_allocation_policy
+  :type_hint: String
+  :description: VG allocation policy.
+- :method: attr
+  :column: vg_attr
+  :type_hint: String
+  :description: Various attributes - see man page.
+- :method: clustered
+  :column: vg_clustered
+  :type_hint: String
+  :description: Set if VG is clustered.
+- :method: exported
+  :column: vg_exported
+  :type_hint: String
+  :description: Set if VG is exported.
+- :method: extendable
+  :column: vg_extendable
+  :type_hint: String
+  :description: Set if VG is extendable.
+- :method: extent_count
+  :column: vg_extent_count
+  :type_hint: Integer
+  :description: Total number of Physical Extents.
+- :method: extent_size
+  :column: vg_extent_size
+  :type_hint: Integer
+  :description: Size of Physical Extents in current units.
+- :method: fmt
+  :column: vg_fmt
+  :type_hint: String
+  :description: Type of metadata.
+- :method: free
+  :column: vg_free
+  :type_hint: Integer
+  :description: Total amount of free space in current units.
+- :method: free_count
+  :column: vg_free_count
+  :type_hint: Integer
+  :description: Total number of unallocated Physical Extents.
+- :method: lockargs
+  :column: vg_lockargs
+  :type_hint: String
+  :description: Lock args of the VG used by lvmlockd.
+- :method: locktype
+  :column: vg_locktype
+  :type_hint: String
+  :description: Lock type of the VG used by lvmlockd.
+- :method: mda_copies
+  :column: vg_mda_copies
+  :type_hint: Integer
+  :description: Target number of in use metadata areas in the VG.
+- :method: mda_count
+  :column: vg_mda_count
+  :type_hint: Integer
+  :description: Number of metadata areas on this VG.
+- :method: mda_free
+  :column: vg_mda_free
+  :type_hint: Integer
+  :description: Free metadata area space for this VG in current units.
+- :method: mda_size
+  :column: vg_mda_size
+  :type_hint: Integer
+  :description: Size of smallest metadata area for this VG in current units.
+- :method: mda_used_count
+  :column: vg_mda_used_count
+  :type_hint: Integer
+  :description: Number of metadata areas in use on this VG.
+- :method: name
+  :column: vg_name
+  :type_hint: String
+  :description: Name.
+- :method: partial
+  :column: vg_partial
+  :type_hint: String
+  :description: Set if VG is partial.
+- :method: permissions
+  :column: vg_permissions
+  :type_hint: String
+  :description: VG permissions.
+- :method: profile
+  :column: vg_profile
+  :type_hint: String
+  :description: Configuration profile attached to this VG.
+- :method: seqno
+  :column: vg_seqno
+  :type_hint: Integer
+  :description: Revision number of internal metadata.  Incremented whenever it changes.
+- :method: size
+  :column: vg_size
+  :type_hint: Integer
+  :description: Total size of VG in current units.
+- :method: sysid
+  :column: vg_sysid
+  :type_hint: String
+  :description: System ID of the VG indicating which host owns it.
+- :method: systemid
+  :column: vg_systemid
+  :type_hint: String
+  :description: System ID of the VG indicating which host owns it.
+- :method: tags
+  :column: vg_tags
+  :type_hint: String
+  :description: Tags
+- :method: uuid
+  :column: vg_uuid
+  :type_hint: String
+  :description: Unique identifier.
diff --git a/lvm2 b/lvm2
index bee2df3..629398d 160000
--- a/lvm2
+++ b/lvm2
@@ -1 +1 @@
-Subproject commit bee2df3903d0956ba2e09ce9ae9ae55dfc5d3fd1
+Subproject commit 629398d0f275e6ee5abf7929bc80e671e9f141c7
